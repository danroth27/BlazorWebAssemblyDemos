@page "/interop/net/instance"

<PageTitle>Interop (.NET Instance)</PageTitle>

<h1>Interop (.NET Instance)</h1>

<input type="button" @onclick="OnRequestInputInstance" value="Request Instance Input" />

<p>@Message</p>

@code {
    string Message { get; set; } = "";

    // inject the interop

    [Inject]
    IJSRuntime JS { get; set; } = null!;

    // load the module

    IJSObjectReference Module { get; set; } = null!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            Module = await JS.InvokeAsync<IJSObjectReference>("import", "./js/MyInterop.js");
    }

    // ask js to send us a message on an object

    private async Task OnRequestInputInstance()
    {
        // get/create the instance
        var instance = new MyObjectType();
        instance.Processing += message =>
        {
            Message = message;
        };

        // get a js reference to it
        using var objRef = DotNetObjectReference.Create(instance);

        // pass the reference to js
        await Module.InvokeVoidAsync("MyInterop.requestInstance", objRef);
    }

    // that instance type

    class MyObjectType
    {
        public event Action<string>? Processing;

        [JSInvokable]
        public async Task ProcessInputAsync(string message) =>
            Processing?.Invoke(message);
    }
}
